syntax = "proto3";

option java_multiple_files = true;
option java_package = "smarthome.generated.climate";
option java_outer_classname = "ClimateServiceImpl";

package ClimateService;

// Enums
enum DeviceState {
  OFF = 0;
  ON = 1;
}

message OperationResponse {
  string operationName = 1;
  bool isSuccessful = 2;
  string message = 3;
}

// -------------------

// Climate Control Service
service ClimateControlService {
  rpc setTargetClimateSettings(TargetClimateSetting) returns (OperationResponse) {}
  rpc respondToHumidityReading(HumidityChangeEvent) returns (ClimateDevicesState) {}
  rpc respondToTemperatureReading(TemperatureChangeEvent) returns (ClimateDevicesState) {}
  rpc setHeatingState(HeatingStateRequest) returns (ClimateDevicesState) {}
  rpc setACState(ACStateRequest) returns (ClimateDevicesState) {}
  rpc setHumidifierDehumidifierState(HumidifierDehumidifierStateRequest) returns (ClimateDevicesState) {}
  rpc getClimateDevicesState(ClimateDevicesStateRequest) returns (ClimateDevicesState) {}
  rpc getTemperatureHistory(TemperatureHistoryRequest) returns (stream TemperatureReading) {}
  rpc getHumidityHistory(HumidityHistoryRequest) returns (stream HumidityReading) {}
}

message TargetClimateSetting {
  int32 targetTemperature = 1;
  int32 targetHumidity = 2;
}

message HumidityChangeEvent {
  int32 humidity = 1;
}

message TemperatureChangeEvent {
  int32 temperature = 1;
}

message HeatingStateRequest {
  DeviceState heatingState = 1;
}

message ACStateRequest {
  DeviceState acState = 1;
}

enum HumidifierDehumidifierState {
  HUMIDIFIER = 0;
  DEHUMIDIFIER = 1;
  HUMIDIFIER_DEHUMIDIFIER_OFF = 2;
}

message HumidifierDehumidifierStateRequest {
  HumidifierDehumidifierState state = 1;
}

message ClimateDevicesState {
  HumidifierDehumidifierState humidityDeviceState = 1;
  DeviceState acState = 2;
  DeviceState heatingState = 3;
}

message ClimateDevicesStateRequest {}

message TemperatureHistoryRequest {
  int32 maxNoOfReadings = 1;
}

message HumidityHistoryRequest {
  int32 maxNoOfReadings = 1;
}

message TemperatureReading {
  string time = 1;
  int32 temperature = 2;
}

message HumidityReading {
  string time = 1;
  int32 humidity = 2;
}